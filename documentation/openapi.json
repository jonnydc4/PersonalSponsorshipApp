{
  "swagger": "2.0",
  "x-stoplight": {
    "id": "zbfmw7gzyrx9t"
  },
  "info": {
    "title": "capstone",
    "version": "1.0"
  },
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/users/{userId}": {
      "parameters": [
        {
          "type": "integer",
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "Id of an existing user."
        }
      ],
      "get": {
        "summary": "Get User Info by User ID",
        "tags": [],
        "responses": {
          "200": {
            "description": "User Found",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "Get User Alice Smith": {
                "id": 142,
                "firstName": "Alice",
                "lastName": "Smith",
                "email": "alice.smith@gmail.com",
                "dateOfBirth": "1997-10-31",
                "emailVerified": true,
                "signUpDate": "2019-08-24"
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "schema": {
              "type": "null"
            },
            "examples": {}
          }
        },
        "operationId": "get-users-userId",
        "description": "Retrieve the information of the user with the matching user ID."
      },
      "patch": {
        "summary": "Update User Information",
        "operationId": "patch-users-userId",
        "responses": {
          "200": {
            "description": "User Updated",
            "schema": {
              "$ref": "#/definitions/User"
            },
            "examples": {
              "Update User Rebecca Baker": {
                "id": 13,
                "firstName": "Rebecca",
                "lastName": "Baker",
                "email": "rebecca@gmail.com",
                "dateOfBirth": "1985-10-02",
                "emailVerified": false,
                "createDate": "2019-08-24"
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "schema": {
              "type": "null"
            }
          },
          "409": {
            "description": "Email Already Taken",
            "schema": {
              "type": "null"
            }
          }
        },
        "description": "Update the information of an existing user.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string",
                  "description": "If a new email is given, the user's email verified property will be set to false."
                },
                "dateOfBirth": {
                  "type": "string"
                }
              }
            },
            "description": "Patch user properties to update.",
            "x-examples": {
              "Update First Name": {
                "firstName": "Rebecca"
              },
              "Update Email": {
                "email": "rebecca@gmail.com"
              },
              "Update Last Name & Date of Birth": {
                "lastName": "Baker",
                "dateOfBirth": "1985-10-02"
              }
            }
          }
        ]
      }
    },
    "/user": {
      "post": {
        "summary": "Create User",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "User Created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Missing Required Information",
            "schema": {
              "type": "null"
            }
          },
          "409": {
            "description": "Email Already Taken",
            "schema": {
              "type": "null"
            }
          }
        },
        "description": "Create a new user.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string",
                  "format": "date"
                }
              },
              "required": [
                "firstName",
                "lastName",
                "email",
                "dateOfBirth"
              ]
            },
            "description": "Post the necessary fields for the API to create a new user.",
            "x-examples": {
              "Create User Bob Fellow": {
                "firstName": "Bob",
                "lastName": "Fellow",
                "email": "bob.fellow@gmail.com",
                "dateOfBirth": "1996-08-24"
              }
            }
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "title": "User",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique identifier for the given user."
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "format": "email"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "example": "1997-10-31"
        },
        "emailVerified": {
          "type": "boolean",
          "description": "Set to true if the user's email has been verified."
        },
        "createDate": {
          "type": "string",
          "format": "date",
          "description": "The date that the user was created."
        }
      },
      "required": [
        "id",
        "firstName",
        "lastName",
        "email",
        "emailVerified"
      ]
    }
  },
  "securityDefinitions": {}
}